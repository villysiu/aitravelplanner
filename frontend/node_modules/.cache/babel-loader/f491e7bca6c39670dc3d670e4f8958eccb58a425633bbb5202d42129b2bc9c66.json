{"ast":null,"code":"import'./navbar.css';import React,{useState}from'react';import axios from'axios';import{useNavigate}from\"react-router-dom\";import{Form,InputGroup}from'react-bootstrap';import{Search}from\"react-bootstrap-icons\";import LoadingOverlay from\"./LoadingOverlay\";import{apiLink}from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchBar=()=>{const[destination,setDestination]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const navigate=useNavigate();const handlePlan=async e=>{e.preventDefault();//\nif(!destination){return;// Prevent running the function if destination is empty\n}setLoading(true);try{const response=await axios.post(`${apiLink}/api/itinerary`,{destination});navigate('/results',{state:{plan:response.data}});// use response.data\n}catch(error){console.error(error);setError(error);// setPlan('Error generating itinerary');\n}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{id:\"search\",children:[loading&&/*#__PURE__*/_jsx(LoadingOverlay,{}),/*#__PURE__*/_jsx(Form,{onSubmit:handlePlan,children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter destination, number of days and people\",value:destination,onChange:e=>setDestination(e.target.value)}),/*#__PURE__*/_jsx(InputGroup.Text,{children:/*#__PURE__*/_jsx(\"button\",{className:\"search-btn\",onClick:handlePlan,disabled:!destination||loading// Disable button if destination is empty\n,children:/*#__PURE__*/_jsx(Search,{})})})]})})]});};export default SearchBar;","map":{"version":3,"names":["React","useState","axios","useNavigate","Form","InputGroup","Search","LoadingOverlay","apiLink","jsx","_jsx","jsxs","_jsxs","SearchBar","destination","setDestination","loading","setLoading","error","setError","navigate","handlePlan","e","preventDefault","response","post","state","plan","data","console","id","children","onSubmit","Control","type","placeholder","value","onChange","target","Text","className","onClick","disabled"],"sources":["/Users/villysiu/Documents/Coding/JAVA Projects/aitravelplanner/frontend/src/components/navbar/SearchBar.js"],"sourcesContent":["import './navbar.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport {useNavigate} from \"react-router-dom\";\nimport {Form, InputGroup} from 'react-bootstrap';\nimport {Search} from \"react-bootstrap-icons\";\nimport LoadingOverlay from \"./LoadingOverlay\";\n\nimport {apiLink} from \"../api\";\n\nconst SearchBar = () => {\n    const [destination, setDestination] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n    const handlePlan = async (e) => {\n        e.preventDefault(); //\n        if (!destination) {\n            return; // Prevent running the function if destination is empty\n        }\n        setLoading(true);\n        try {\n            const response = await axios.post(`${apiLink}/api/itinerary`, { destination });\n            navigate('/results', { state: { plan: response.data } }); // use response.data\n\n\n        } catch (error) {\n            console.error(error);\n            setError(error);\n            // setPlan('Error generating itinerary');\n        } finally {\n            setLoading(false);\n        }\n    };\n    return(\n        <div id=\"search\">\n            {loading && <LoadingOverlay />}\n            <Form onSubmit={handlePlan}>\n                <InputGroup>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter destination, number of days and people\"\n                        value={destination}\n                        onChange={(e) => setDestination(e.target.value)}\n                    />\n                    <InputGroup.Text>\n\n                        <button\n                            className=\"search-btn\"\n                            onClick={handlePlan}\n                            disabled={!destination || loading} // Disable button if destination is empty\n                        >\n                            <Search />\n                        </button>\n\n\n                    </InputGroup.Text>\n                </InputGroup>\n\n            </Form>\n        </div>\n    )\n}\nexport default SearchBar"],"mappings":"AAAA,MAAO,cAAc,CACrB,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAAQC,WAAW,KAAO,kBAAkB,CAC5C,OAAQC,IAAI,CAAEC,UAAU,KAAO,iBAAiB,CAChD,OAAQC,MAAM,KAAO,uBAAuB,CAC5C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAE7C,OAAQC,OAAO,KAAO,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAmB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAkB,UAAU,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AACpB,GAAI,CAACT,WAAW,CAAE,CACd,OAAQ;AACZ,CACAG,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,IAAI,CAAC,GAAGjB,OAAO,gBAAgB,CAAE,CAAEM,WAAY,CAAC,CAAC,CAC9EM,QAAQ,CAAC,UAAU,CAAE,CAAEM,KAAK,CAAE,CAAEC,IAAI,CAAEH,QAAQ,CAACI,IAAK,CAAE,CAAC,CAAC,CAAE;AAG9D,CAAE,MAAOV,KAAK,CAAE,CACZW,OAAO,CAACX,KAAK,CAACA,KAAK,CAAC,CACpBC,QAAQ,CAACD,KAAK,CAAC,CACf;AACJ,CAAC,OAAS,CACND,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CACD,mBACIL,KAAA,QAAKkB,EAAE,CAAC,QAAQ,CAAAC,QAAA,EACXf,OAAO,eAAIN,IAAA,CAACH,cAAc,GAAE,CAAC,cAC9BG,IAAA,CAACN,IAAI,EAAC4B,QAAQ,CAAEX,UAAW,CAAAU,QAAA,cACvBnB,KAAA,CAACP,UAAU,EAAA0B,QAAA,eACPrB,IAAA,CAACN,IAAI,CAAC6B,OAAO,EACTC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,8CAA8C,CAC1DC,KAAK,CAAEtB,WAAY,CACnBuB,QAAQ,CAAGf,CAAC,EAAKP,cAAc,CAACO,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CACnD,CAAC,cACF1B,IAAA,CAACL,UAAU,CAACkC,IAAI,EAAAR,QAAA,cAEZrB,IAAA,WACI8B,SAAS,CAAC,YAAY,CACtBC,OAAO,CAAEpB,UAAW,CACpBqB,QAAQ,CAAE,CAAC5B,WAAW,EAAIE,OAAS;AAAA,CAAAe,QAAA,cAEnCrB,IAAA,CAACJ,MAAM,GAAE,CAAC,CACN,CAAC,CAGI,CAAC,EACV,CAAC,CAEX,CAAC,EACN,CAAC,CAEd,CAAC,CACD,cAAe,CAAAO,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}